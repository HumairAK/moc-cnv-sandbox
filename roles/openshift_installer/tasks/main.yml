---
- include_role:
    name: pull-secret

- name: copy pull secret to provisioner
  copy:
    content: "{{ pull_secret | to_nice_json }}"
    dest: /home/kni/pull-secret.json

- name: get release.txt
  delegate_to: localhost
  tags: [release_txt]
  command: >-
    curl -s https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ openshift_release }}/release.txt
  register: release_txt_cmd

- set_fact:
    release_txt:
      content: "{{ release_txt_cmd.stdout }}"

- debug:
    var: release_txt

- name: get installer image name
  set_fact:
    release_image: >-
      {{
        (
        release_txt.content.splitlines() |
        map('regex_search', '^Pull From: .*') |
        select |
        list
        ).0.split().2
      }}

- name: get oc binary archive
  get_url:
    url: https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ openshift_release }}/openshift-client-linux.tar.gz
    dest: /home/kni/openshift-clients.tar.gz
    force: true
  register: oc

- name: delete old binaries
  when: oc is changed
  become: true
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /usr/local/bin/oc
    - /usr/local/bin/openshift-baremetal-install

- name: extract oc binary
  become: true
  become_user: root
  command: >-
    tar -x -C /usr/local/bin -f /home/kni/openshift-clients.tar.gz oc
  args:
    creates: /usr/local/bin/oc

- name: extract the installer
  become: true
  become_user: root
  command: >-
    /usr/local/bin/oc adm release extract
    --registry-config /home/kni/pull-secret.json
    --command="openshift-baremetal-install"
    --to "/usr/local/bin"
    {{ release_image }}
  args:
    creates: /usr/local/bin/openshift-baremetal-install
