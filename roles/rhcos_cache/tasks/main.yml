---
- name: create rhcos cache directory
  file:
    path: /home/kni/rhcos_image_cache
    state: directory

# LKS: It will be tricky to make these idempotent using the command
# module. There may be an ansible module that does the job.
- name: set selinux context for cache directory (1)
  become: true
  become_user: root
  command: >-
    semanage fcontext -a -t httpd_sys_content_t /home/kni/rhcos_image_cache(/.*)?
  register: semanage_out
  failed_when: >-
    semanage_out.rc != 0 and "already defined" not in semanage_out.stderr

- name: set selinux context for cache directory (2)
  become: true
  become_user: root
  command: >-
    restorecon -Rv /home/kni/rhcos_image_cache

- name: get release version information
  command: >-
    /usr/local/bin/openshift-baremetal-install version
  register: obi_version
  changed_when: false

- name: get commit id from version information
  set_fact:
    commit_id: >-
      {{
        (
        obi_version.stdout_lines |
        map('regex_search', '^built from commit.*') |
        select |
        list
        ).0.split().3
      }}

- name: get rhcos.json
  uri:
    url: https://raw.githubusercontent.com/openshift/installer/{{ commit_id }}/data/data/rhcos.json
    return_content: true
  register: rhcos_json

- name: get rhcos openstack uri
  set_fact:
    rhcos_openstack_uri: >-
      {{ rhcos_json.json.images.openstack.path }}
    rhcos_qemu_uri: >-
      {{ rhcos_json.json.images.qemu.path }}
    rhcos_path: >-
      {{ rhcos_json.json.baseURI }}
    rhcos_qemu_sha_uncompressed: >-
      {{ rhcos_json.json.images.qemu['uncompressed-sha256'] }}
    rhcos_openstack_sha_compressed: >-
      {{ rhcos_json.json.images.openstack.sha256 }}

- debug:
    msg:
      - "{{ rhcos_openstack_uri }}"
      - "{{ rhcos_qemu_uri }}"
      - "{{ rhcos_path }}"
      - "{{ rhcos_qemu_sha_uncompressed }}"
      - "{{ rhcos_openstack_sha_compressed }}"

- name: download rhcos images
  get_url:
    url: "{{ rhcos_path }}/{{ item }}"
    dest: "/home/kni/rhcos_image_cache/{{ item }}"
  loop:
    - "{{ rhcos_openstack_uri }}"
    - "{{ rhcos_qemu_uri }}"

- name: start rhcos_image_cache container
  when: false
  containers.podman.podman_container:
    name: rhcos_image_cache
    state: started
    image: registry.centos.org/centos/httpd-24-centos7:latest
    volume:
      - "/home/kni/rhcos_image_cache:/var/www/html"
    publish:
      - "8080:8080/tcp"

- name: create rhcos image cache systemd unit
  include_role:
    name: podman
    tasks_from: pod_service_unit.yml
  vars:
    podman_unit_file: "/home/kni/.config/systemd/user/rhcos_image_cache.service"
    podman_args: >-
      -v /home/kni/rhcos_image_cache:/var/www/html -p 8080:8080/tcp
    podman_image: registry.centos.org/centos/httpd-24-centos7:latest

# This should ideally be triggered via a handler in the systemd/user role,
# but you can't attach "notify" to an include_role task.
- name: reload systemd
  command: >-
    systemctl --user daemon-reload

- name: activate rhcos image cache
  command: >-
    systemctl --user enable --now rhcos_image_cache.service
