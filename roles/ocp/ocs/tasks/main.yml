---
- name: look up existing machineset
  tags: [machineset]
  k8s_info:
    api_version: machine.openshift.io/v1beta1
    kind: MachineSet
    namespace: openshift-machine-api
    name: "{{ os_prototype_machineset }}"
  register: proto

- tags: [machineset]
  set_fact:
    ms_image_info: "{{ proto|json_query('resources[0].spec.template.spec.providerSpec.value.image') }}"

- name: ensure storage machineset exists
  tags: [machineset]
  k8s:
    state: present
    definition:
      apiVersion: machine.openshift.io/v1beta1
      kind: MachineSet
      metadata:
        labels:
          machine.openshift.io/cluster-api-cluster: "{{ os_cluster_id }}"
          machine.openshift.io/cluster-api-machine-role: worker
          machine.openshift.io/cluster-api-machine-type: worker
        name: "{{ os_cluster_id }}-storage-0"
        namespace: openshift-machine-api
      spec:
        replicas: 3
        selector:
          matchLabels:
            machine.openshift.io/cluster-api-cluster: "{{ os_cluster_id }}"
            machine.openshift.io/cluster-api-machineset: "{{ os_cluster_id }}-storage-0"
        template:
          metadata:
            labels:
              machine.openshift.io/cluster-api-cluster: "{{ os_cluster_id }}"
              machine.openshift.io/cluster-api-machine-role: worker
              machine.openshift.io/cluster-api-machine-type: worker
              machine.openshift.io/cluster-api-machineset: "{{ os_cluster_id }}-storage-0"
          spec:
            metadata:
              labels:
                cluster.ocs.openshift.io/openshift-storage: ''
            providerSpec:
              value:
                hostSelector: {}
                image: "{{ ms_image_info }}"
                userData:
                  name: worker-user-data

- name: ensure openshift-storage namespace exists
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        labels:
          openshift.io/cluster-monitoring: "true"
        name: openshift-storage

- name: subscribe to ocs operator
  k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: ocs-operator
        namespace: openshift-storage
      spec:
        channel: "{{ ocs_channel_version|string }}"
        installPlanApproval: Automatic
        name: ocs-operator
        source: redhat-operators
        sourceNamespace: openshift-marketplace
        startingCSV: "{{ ocs_version }}"

- name: wait for operator installation to complete
  include_role:
    name: ocp/api
    tasks_from: waitforsubscription.yml
  vars:
    operator_ns: openshift-storage
    operator_name: ocs-operator

- name: create local storage volumes
  tags: [ocs.volumes]
  when: ocs_devices is defined
  k8s:
    state: present
    definition:
      apiVersion: "local.storage.openshift.io/v1"
      kind: "LocalVolume"
      metadata:
        name: "localblock"
        namespace: "local-storage"
        labels:
          app: ocs-storagecluster
      spec:
        nodeSelector:
          nodeSelectorTerms:
            - matchExpressions:
                - key: cluster.ocs.openshift.io/openshift-storage
                  operator: In
                  values:
                    - ''
        storageClassDevices:
          - storageClassName: "localblock"
            volumeMode: Block
            devicePaths: "{{ ocs_devices }}"

- name: create storage cluster
  k8s:
    state: present
    definition:
      apiVersion: ocs.openshift.io/v1
      kind: StorageCluster
      metadata:
        name: ocs-storagecluster
        namespace: openshift-storage
      spec:
        manageNodes: false
        monDataDirHostPath: /var/lib/rook
        storageDeviceSets:
          - count: 3
            dataPVCTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 500Gi
                storageClassName: localblock
                volumeMode: Block
            name: ocs-deviceset
            placement: {}
            portable: false
            replica: 3
            resources: {}
